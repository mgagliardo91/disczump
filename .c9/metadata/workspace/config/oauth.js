{"filter":false,"title":"oauth.js","tooltip":"/config/oauth.js","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":81,"column":1},"action":"insert","lines":["var oauth2orize         = require('oauth2orize');","var passport            = require('passport');","var crypto              = require('crypto');","var User            = require('../app/models/user');","var ClientModel             = require('../app/models/client');","var AccessTokenModel        = require('../app/models/accessToken');","var RefreshTokenModel       = require('../app/models/refreshToken');","","// create OAuth 2.0 server","var server = oauth2orize.createServer();","","// Exchange username & password for access token.","server.exchange(oauth2orize.exchange.password(function(client, username, password, scope, done) {","    console.log('made it to exchange 1');","    User.findOne({ 'local.email': username }, function(err, user) {","        if (err) { return done(err); }","        if (!user) { return done(null, false); }","        if (!user.validPassword(password)) { return done(null, false); }","","        RefreshTokenModel.remove({ userId: user._id, clientId: client.clientId }, function (err) {","            if (err) return done(err);","        });","        AccessTokenModel.remove({ userId: user._id, clientId: client.clientId }, function (err) {","            if (err) return done(err);","        });","","        var tokenValue = crypto.randomBytes(32).toString('base64');","        var refreshTokenValue = crypto.randomBytes(32).toString('base64');","        var token = new AccessTokenModel({ token: tokenValue, clientId: client.clientId, userId: user._id });","        var refreshToken = new RefreshTokenModel({ token: refreshTokenValue, clientId: client.clientId, userId: user._id });","        refreshToken.save(function (err) {","            if (err) { return done(err); }","        });","        var info = { scope: '*' }","        token.save(function (err, token) {","            if (err) { return done(err); }","            done(null, tokenValue, refreshTokenValue, { 'expires_in': 36 });","        });","    });","}));","","// Exchange refreshToken for access token.","server.exchange(oauth2orize.exchange.refreshToken(function(client, refreshToken, scope, done) {","    console.log('made it to exchange 2');","    RefreshTokenModel.findOne({ token: refreshToken }, function(err, token) {","        if (err) { return done(err); }","        if (!token) { return done(null, false); }","        if (!token) { return done(null, false); }","","        User.findById(token.userId, function(err, user) {","            if (err) { return done(err); }","            if (!user) { return done(null, false); }","","            RefreshTokenModel.remove({ userId: user._id, clientId: client.clientId }, function (err) {","                if (err) return done(err);","            });","            AccessTokenModel.remove({ userId: user._id, clientId: client.clientId }, function (err) {","                if (err) return done(err);","            });","","            var tokenValue = crypto.randomBytes(32).toString('base64');","            var refreshTokenValue = crypto.randomBytes(32).toString('base64');","            var token = new AccessTokenModel({ token: tokenValue, clientId: client.clientId, userId: user._id });","            var refreshToken = new RefreshTokenModel({ token: refreshTokenValue, clientId: client.clientId, userId: user._id });","            refreshToken.save(function (err) {","                if (err) { return done(err); }","            });","            var info = { scope: '*' }","            token.save(function (err, token) {","                if (err) { return done(err); }","                done(null, tokenValue, refreshTokenValue, { 'expires_in': 36 });","            });","        });","    });","}));","","// token endpoint","exports.token = [","    passport.authenticate(['api-login', 'oauth2-client-password'], { session: false }),","    server.token(),","    server.errorHandler()","]"]}]}]]},"ace":{"folds":[],"scrolltop":300,"scrollleft":0,"selection":{"start":{"row":38,"column":7},"end":{"row":38,"column":7},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1418844154641,"hash":"a76f38d454c81a3083e949f0c91b2f3cded89190"}